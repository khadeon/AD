import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;

import java.math.BigDecimal;

public class PruebaArticulo {

	static EntityManagerFactory entityManagerFactory = 
			Persistence.createEntityManagerFactory("org.institutoserpis.ad");
	public static void main(String[] args) {
		Logger.getLogger("org.hibernate").setLevel(Level.SEVERE);
		
		System.out.println("inicio");
		entityManagerFactory = 
				Persistence.createEntityManagerFactory("org.institutoserpis.ad");
		Long articuloId=persist();
		update(articuloId);
		find(articuloId);
		remove(articuloId);
		query();
		
		entityManagerFactory.close();
	}
	

	private static void show(Articulo arti)
	{
		System.out.printf("%5s %-30s %5s %10s\n", 
				arti.getId(), 
				arti.getNombre(), 
				arti.getCategoria(), 
				arti.getPrecio()
		);
	}
	
	private static void query()
	{
		System.out.println("query:");
		EntityManager entityManager = entityManagerFactory.createEntityManager();
		entityManager.getTransaction().begin();
		List<Articulo> articulos = entityManager.createQuery("from Articulo", Articulo.class).getResultList();
		for (Articulo articulo : articulos)
			show(articulo);
		entityManager.getTransaction().commit();
		entityManager.close();
	}
	
	private static Long persist()
	{
		System.out.println("persist:");
		EntityManager entityManager = entityManagerFactory.createEntityManager();
		entityManager.getTransaction().begin();
		Articulo articulo=new Articulo();
		articulo.setNombre("nuevo "+new Date());
		entityManager.persist(articulo);
		entityManager.getTransaction().commit();
		entityManager.close();
		show(articulo);
		return articulo.getId();
	}

	private static void find(Long id)
	{
		System.out.println("find:");
		EntityManager entityManager = entityManagerFactory.createEntityManager();
		entityManager.getTransaction().begin();
		Articulo articulo=entityManager.find(Articulo.class, id);
		entityManager.getTransaction().commit();
		entityManager.close();
		show(articulo);
	}
	
	private static void remove(Long id)
	{
		System.out.println("find:");
		EntityManager entityManager = entityManagerFactory.createEntityManager();
		entityManager.getTransaction().begin();
		
		Articulo articulo=entityManager.find(Articulo.class, id);
		entityManager.remove(articulo);
		
		entityManager.getTransaction().commit();
		entityManager.close();
	}
	
	private static void update(Long id) {

		System.out.println("update:");
		EntityManager entityManager = entityManagerFactory.createEntityManager();
		entityManager.getTransaction().begin();
		
		Articulo articulo=entityManager.find(Articulo.class, id);
		articulo.setNombre("modificado"+new Date());
		entityManager.getTransaction().commit();
		entityManager.close();
		show(articulo);
	}
}
